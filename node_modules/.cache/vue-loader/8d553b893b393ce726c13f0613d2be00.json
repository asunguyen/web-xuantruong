{"remainingRequest":"D:\\code\\DU_AN\\web-xuantruong\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DU_AN\\web-xuantruong\\web\\src\\views\\client\\Home.vue?vue&type=template&id=094699ce","dependencies":[{"path":"D:\\code\\DU_AN\\web-xuantruong\\web\\src\\views\\client\\Home.vue","mtime":1700287368868},{"path":"D:\\code\\DU_AN\\web-xuantruong\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700281618382},{"path":"D:\\code\\DU_AN\\web-xuantruong\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1700281631273},{"path":"D:\\code\\DU_AN\\web-xuantruong\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700281618382},{"path":"D:\\code\\DU_AN\\web-xuantruong\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1700281628177}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}